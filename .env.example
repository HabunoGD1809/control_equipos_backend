# =================================================================
#               CONFIGURACIÓN PRINCIPAL DEL PROYECTO
# =================================================================

# Nombre del proyecto que aparecerá en la documentación de la API.
PROJECT_NAME="Control de Equipos API"
API_V1_STR="/api/v1"

# ¡MUY IMPORTANTE! Clave secreta para la firma de tokens JWT.
# Debes generar una clave única y segura para tu entorno.
# Comando sugerido: openssl rand -hex 32
SECRET_KEY="tu_clave_secreta_aqui_generada_con_openssl"
# ---Ejemplo: 
# SECRET_KEY=e7f9a4c25d673a90b5e2f99f7a928b0c2fd5b2e9cc3f11a7b4ac8df0e3c13e59

# Algoritmo de firma para los JWT. HS256 es un valor estándar.
ALGORITHM=HS256

# Duración del token de acceso en minutos. 1440 minutos = 1 día.
ACCESS_TOKEN_EXPIRE_MINUTES=1440


# =================================================================
#               CONFIGURACIÓN DE LA BASE DE DATOS (PostgreSQL)
# =================================================================

# Host del servidor de PostgreSQL.
# Usa 'localhost' si corres la base de datos localmente (sin Docker).
# Usa 'db' si corres la base de datos dentro de Docker Compose.
# POSTGRES_SERVER=localhost
POSTGRES_PORT=5432
POSTGRES_USER=postgres
POSTGRES_PASSWORD="tu_password_seguro_de_postgres"
POSTGRES_DB="control_equipos_dbv1"


# =================================================================
#               CONFIGURACIÓN DE CORS (Cross-Origin Resource Sharing)
# =================================================================

# Lista de orígenes (frontends) que tienen permiso para acceder a la API.
# Deben estar en formato de lista JSON o separados por comas.
# Ejemplo: BACKEND_CORS_ORIGINS=["http://localhost:3000","https://mi-frontend.com"]
BACKEND_CORS_ORIGINS=["http://localhost:3000", "http://localhost:8080"]


# =================================================================
#               CONFIGURACIÓN DE CELERY (Tareas Asíncronas)
# =================================================================

# URL del broker de Celery.
# Usa 'redis://localhost:6379/0' para desarrollo local (sin Docker).
# Usa 'redis://redis:6379/0' si corres Redis dentro de Docker Compose.
CELERY_BROKER_URL=redis://localhost:6379/0
CELERY_RESULT_BACKEND=redis://localhost:6379/0


# =================================================================
#               CONFIGURACIÓN DEL SUPERUSUARIO INICIAL
# =================================================================

# Credenciales para el primer usuario administrador que se creará con el script.
SUPERUSER_EMAIL="admin@tuempresa.com"
SUPERUSER_PASSWORD="UnaContraseñaMuySegura123!"


# =================================================================
#               OTRAS CONFIGURACIONES (OPCIONAL)
# =================================================================

# Número de intentos de inicio de sesión fallidos antes de bloquear una cuenta.
MAX_FAILED_ATTEMPTS_BEFORE_LOCK=5

# Contraseñas para usuarios de prueba (usadas por el framework de testing).
# No es necesario cambiarlas a menos que tus pruebas lo requieran.
TEST_USER_REGULAR_PASSWORD="UsuarioPass123!"
TEST_ADMIN_PASSWORD="AdminPass123!"
TEST_SUPERVISOR_PASSWORD="SuperPass123!"
TEST_TECNICO_PASSWORD="TecnicoPass123!"
TEST_AUDITOR_PASSWORD="AuditorPass123!"
TEST_TESTER_PASSWORD="TesterPass123!"
